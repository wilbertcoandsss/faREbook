package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"context"

	"github.com/wilbertcoandssss/training-preweb/graph/model"
)

// InsertTaggedUser is the resolver for the insertTaggedUser field.
func (r *mutationResolver) InsertTaggedUser(ctx context.Context, postID string, userID string) (bool, error) {
	tag := &model.TaggedUser{
		UserID: userID,
		PostID: postID,
	}

	return true, r.DB.Create(&tag).Error
}

// GetAllTagged is the resolver for the getAllTagged field.
func (r *queryResolver) GetAllTagged(ctx context.Context, postID string) ([]*model.TaggedUser, error) {
	var tagged []*model.TaggedUser

	if err := r.DB.Where("post_id = ?", postID).Find(&tagged); err != nil {
		return nil, nil
	}

	return tagged, nil
}
