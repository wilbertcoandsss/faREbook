// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type AuthUser struct {
	ID         string `json:"id"`
	Email      string `json:"email"`
	Isverified bool   `json:"isverified"`
	Token      string `json:"token"`
}

type ChatDetails struct {
	ID           string `json:"id"`
	ChatHeaderID string `json:"chatHeaderId"`
	SenderID     string `json:"senderId"`
	ChatText     string `json:"chatText"`
	CreatedAt    string `json:"createdAt"`
	Type         string `json:"type"`
	MediaURL     string `json:"mediaUrl"`
}

type ChatGroupDetails struct {
	ID           string `json:"id"`
	ChatHeaderID string `json:"chatHeaderId"`
	SenderID     string `json:"senderId"`
	ChatText     string `json:"chatText"`
	CreatedAt    string `json:"createdAt"`
	Type         string `json:"type"`
	MediaURL     string `json:"mediaUrl"`
}

type ChatGroupHeader struct {
	ID        string `json:"id"`
	GroupID   string `json:"groupId"`
	CreatedAt string `json:"createdAt"`
}

type ChatHeader struct {
	ID        string `json:"id"`
	UserID1   string `json:"userId1"`
	UserID2   string `json:"userId2"`
	CreatedAt string `json:"createdAt"`
}

type Comment struct {
	ID      string `json:"ID"`
	PostID  string `json:"PostID"`
	UserID  string `json:"UserID"`
	Comment string `json:"Comment"`
	Date    string `json:"Date"`
}

type FetchChat struct {
	ChatHeaderID           string         `json:"chatHeaderId"`
	ChatHeaderInformation  *ChatHeader    `json:"chatHeaderInformation"`
	UserID1Data            *User          `json:"userId1Data"`
	UserID2Data            *User          `json:"userId2Data"`
	ChatDetailsInformation []*ChatDetails `json:"chatDetailsInformation"`
	ReceiverID             string         `json:"receiverId"`
	PostData               []*Post        `json:"postData"`
	PostAuthor             []*User        `json:"postAuthor"`
}

type FetchComment struct {
	ID           string `json:"ID"`
	PostID       string `json:"PostID"`
	UserID       string `json:"UserID"`
	Comment      string `json:"Comment"`
	Date         string `json:"Date"`
	LikedCount   int    `json:"LikedCount"`
	UserData     *User  `json:"UserData"`
	RepliesCount int    `json:"RepliesCount"`
}

type FetchFriendsReq struct {
	UserID      string `json:"UserID"`
	FriendsID   string `json:"FriendsID"`
	Status      string `json:"Status"`
	UserData    *User  `json:"UserData"`
	FriendsData *User  `json:"FriendsData"`
}

type FetchGroup struct {
	ID             string              `json:"ID"`
	GroupName      string              `json:"GroupName"`
	GroupPrivacy   string              `json:"GroupPrivacy"`
	GroupDesc      string              `json:"GroupDesc"`
	GroupAdmin     string              `json:"GroupAdmin"`
	GroupBannerPic string              `json:"GroupBannerPic"`
	GroupCreated   string              `json:"GroupCreated"`
	GroupMember    []*GroupMemberWUSer `json:"GroupMember"`
}

type FetchGroupChat struct {
	ChatHeaderID           string              `json:"chatHeaderId"`
	ChatHeaderInformation  *ChatGroupHeader    `json:"chatHeaderInformation"`
	ChatDetailsInformation []*ChatGroupDetails `json:"chatDetailsInformation"`
	SenderData             []*User             `json:"senderData"`
}

type FetchGroupFiles struct {
	ID           string `json:"ID"`
	GroupID      string `json:"GroupId"`
	OwnerID      string `json:"OwnerId"`
	FileName     string `json:"FileName"`
	FileType     string `json:"FileType"`
	UploadedDate string `json:"UploadedDate"`
	MediaURL     string `json:"MediaUrl"`
	OwnerData    *User  `json:"OwnerData"`
}

type FetchGroupPost struct {
	ID          string   `json:"id"`
	ContentText string   `json:"contentText"`
	AuthorID    string   `json:"authorId"`
	PostDate    string   `json:"postDate"`
	AuthorData  *User    `json:"authorData"`
	LikedCount  int      `json:"likedCount"`
	MediaURL    []string `json:"mediaUrl"`
	PostPrivacy string   `json:"postPrivacy"`
}

type FetchGroupWPost struct {
	FetchGroup *FetchGroup       `json:"FetchGroup"`
	GroupPost  []*FetchGroupPost `json:"GroupPost"`
}

type FetchPost struct {
	ID           string   `json:"id"`
	ContentText  string   `json:"contentText"`
	AuthorID     string   `json:"authorId"`
	PostDate     string   `json:"postDate"`
	PostPrivacy  string   `json:"postPrivacy"`
	AuthorData   *User    `json:"authorData"`
	LikedCount   int      `json:"likedCount"`
	CommentCount int      `json:"commentCount"`
	MediaURL     []string `json:"mediaUrl"`
	TaggedUser   []*User  `json:"taggedUser"`
}

type FetchReels struct {
	ID           string   `json:"Id"`
	UserID       string   `json:"UserID"`
	Caption      string   `json:"Caption"`
	ReelsDate    string   `json:"ReelsDate"`
	FontColor    string   `json:"FontColor"`
	LikedCount   int      `json:"LikedCount"`
	CommentCount int      `json:"CommentCount"`
	MediaURL     []string `json:"MediaUrl"`
	AuthorData   *User    `json:"AuthorData"`
}

type FetchReplies struct {
	ID           string `json:"ID"`
	CommentID    string `json:"CommentID"`
	UserID       string `json:"UserID"`
	Reply        string `json:"Reply"`
	Date         string `json:"Date"`
	LikedCount   int    `json:"LikedCount"`
	UserData     *User  `json:"UserData"`
	AncestorData *User  `json:"AncestorData"`
}

type FetchStories struct {
	ID          string   `json:"ID"`
	UserID      string   `json:"UserID"`
	Type        string   `json:"Type"`
	BgColor     string   `json:"BgColor"`
	FontFamily  string   `json:"FontFamily"`
	FontColor   string   `json:"FontColor"`
	TextContent string   `json:"TextContent"`
	Date        string   `json:"Date"`
	ZoomLevel   int      `json:"ZoomLevel"`
	MediaURL    []string `json:"MediaUrl"`
	AuthorData  *User    `json:"AuthorData"`
}

type Friends struct {
	UserID    string `json:"UserID"`
	FriendsID string `json:"FriendsID"`
	Status    string `json:"Status"`
}

type Group struct {
	ID             string `json:"ID"`
	GroupName      string `json:"GroupName"`
	GroupPrivacy   string `json:"GroupPrivacy"`
	GroupDesc      string `json:"GroupDesc"`
	GroupAdmin     string `json:"GroupAdmin"`
	GroupBannerPic string `json:"GroupBannerPic"`
	GroupCreated   string `json:"GroupCreated"`
}

type GroupFiles struct {
	ID           string `json:"ID"`
	GroupID      string `json:"GroupId"`
	OwnerID      string `json:"OwnerId"`
	FileName     string `json:"FileName"`
	FileType     string `json:"FileType"`
	UploadedDate string `json:"UploadedDate"`
	MediaURL     string `json:"MediaUrl"`
}

type GroupMember struct {
	UserID  string `json:"UserID"`
	GroupID string `json:"GroupID"`
	Role    string `json:"Role"`
	Status  string `json:"Status"`
}

type GroupMemberWUSer struct {
	GroupMember *GroupMember `json:"GroupMember"`
	UserData    *User        `json:"UserData"`
}

type GroupPost struct {
	ID          string `json:"id"`
	GroupID     string `json:"groupId"`
	ContentText string `json:"contentText"`
	AuthorID    string `json:"authorId"`
	PostDate    string `json:"postDate"`
	PostPrivacy string `json:"postPrivacy"`
}

type Like struct {
	PostID string `json:"PostID"`
	UserID string `json:"UserID"`
	Type   string `json:"Type"`
}

type LoginInput struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

type Media struct {
	PostID   string `json:"postId"`
	MediaURL string `json:"mediaUrl"`
}

type NewFiles struct {
	GroupID      string `json:"GroupId"`
	OwnerID      string `json:"OwnerId"`
	FileName     string `json:"FileName"`
	FileType     string `json:"FileType"`
	UploadedDate string `json:"UploadedDate"`
	MediaURL     string `json:"MediaUrl"`
}

type NewGroup struct {
	GroupName      string `json:"GroupName"`
	GroupPrivacy   string `json:"GroupPrivacy"`
	GroupDesc      string `json:"GroupDesc"`
	GroupAdmin     string `json:"GroupAdmin"`
	GroupBannerPic string `json:"GroupBannerPic"`
	GroupCreated   string `json:"GroupCreated"`
}

type NewGroupMember struct {
	UserID  string `json:"UserID"`
	GroupID string `json:"GroupID"`
	Role    string `json:"Role"`
	Status  string `json:"Status"`
}

type NewGroupPostInput struct {
	GroupID     string `json:"groupId"`
	ContentText string `json:"contentText"`
	AuthorID    string `json:"authorId"`
	PostDate    string `json:"postDate"`
	PostPrivacy string `json:"postPrivacy"`
}

type NewPostInput struct {
	ContentText string `json:"contentText"`
	AuthorID    string `json:"authorId"`
	PostDate    string `json:"postDate"`
	PostPrivacy string `json:"postPrivacy"`
}

type NewReels struct {
	Caption   string `json:"Caption"`
	UserID    string `json:"UserID"`
	ReelsDate string `json:"ReelsDate"`
	FontColor string `json:"FontColor"`
}

type NewStories struct {
	UserID      string    `json:"UserID"`
	Type        string    `json:"Type"`
	BgColor     *string   `json:"BgColor,omitempty"`
	FontFamily  *string   `json:"FontFamily,omitempty"`
	FontColor   *string   `json:"FontColor,omitempty"`
	TextContent *string   `json:"TextContent,omitempty"`
	Date        string    `json:"Date"`
	MediaURL    []*string `json:"MediaUrl,omitempty"`
	ZoomLevel   *int      `json:"ZoomLevel,omitempty"`
}

type NewUser struct {
	Firstname  string `json:"firstname"`
	Surname    string `json:"surname"`
	Email      string `json:"email"`
	Password   string `json:"password"`
	Dob        string `json:"Dob"`
	Verifcode  string `json:"verifcode"`
	Isverified bool   `json:"isverified"`
	Gender     string `json:"gender"`
	Profilepic string `json:"profilepic"`
}

type Post struct {
	ID          string `json:"id"`
	ContentText string `json:"contentText"`
	AuthorID    string `json:"authorId"`
	PostDate    string `json:"postDate"`
	PostPrivacy string `json:"postPrivacy"`
}

type Reels struct {
	ID        string `json:"Id"`
	UserID    string `json:"UserID"`
	Caption   string `json:"Caption"`
	ReelsDate string `json:"ReelsDate"`
	FontColor string `json:"FontColor"`
}

type Replies struct {
	ID        string `json:"ID"`
	CommentID string `json:"CommentID"`
	UserID    string `json:"UserID"`
	Reply     string `json:"Reply"`
	Date      string `json:"Date"`
}

type Stories struct {
	ID          string `json:"ID"`
	UserID      string `json:"UserID"`
	Type        string `json:"Type"`
	BgColor     string `json:"BgColor"`
	FontFamily  string `json:"FontFamily"`
	FontColor   string `json:"FontColor"`
	TextContent string `json:"TextContent"`
	Date        string `json:"Date"`
	ZoomLevel   int    `json:"ZoomLevel"`
}

type TaggedUser struct {
	UserID string `json:"userId"`
	PostID string `json:"postId"`
}


type NewChatDetail struct {
	ChatHeaderID string `json:"chatHeaderId"`
	SenderID     string `json:"senderId"`
	ChatText     string `json:"chatText"`
	Type         string `json:"type"`
	MediaURL     string `json:"mediaUrl"`
}

type NewChatGroupDetail struct {
	ChatHeaderID string `json:"chatHeaderId"`
	SenderID     string `json:"senderId"`
	ChatText     string `json:"chatText"`
	Type         string `json:"type"`
	MediaURL     string `json:"mediaUrl"`
}

type NewChatHeader struct {
	UserID1 string `json:"userId1"`
	UserID2 string `json:"userId2"`
}
